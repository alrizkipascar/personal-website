import { Link, useLocation } from "@remix-run/react";
import { useState } from "react";
import NavbarButton from "../Header/NavbarButton";
// import styles from "~/styles/header.css";
// import type { LinksFunction } from "@remix-run/node";

export default function Header() {
  const location = useLocation();
  const pathname = location?.pathname;
  const admin = "admin";
  const [isNavbarVisible, setIsNavbarVisible] = useState(false);
  const toggleNavbar = () => {
    setIsNavbarVisible(!isNavbarVisible);
  };
  console.log(pathname);
  const links = [
    { href: "/", label: "Home" },
    { href: "/projects", label: "Projects" },
    { href: "/blog", label: "Blogs" },
    { href: "/location", label: "Location" },
    { href: "/about", label: "About" },
  ];

  if (!pathname.includes(admin)) {
    return (
      <header
        className="base"
        // style={{
        //   position: "fixed",
        //   zIndex: 10,
        //   top: 0,
        //   width: "100%",
        //   height: "6rem",
        //   marginLeft: 0,
        // }}
      >
        <div className="header-container">
          <h1 className="header-logo">
            <Link to=".">Alrizki Pasca</Link>
          </h1>
          <ul className="  header-ul">
            {links.map((link) => (
              <Link
                key={link.href}
                className={`${
                  link.href === pathname ? "header-li-true" : ""
                } header-li`}
                // href={link.href}
                to={link.href}
              >
                {/* {link.href === pathname && (
                      <motion.span
                        layoutId="underline"
                        className="absolute left-0 top-full block h-[1px] w-full bg-textWhite"
                      />
                    )} */}
                {link.label}
              </Link>
            ))}
          </ul>
          <div className="flex lg:hidden my-auto   justify-end lg:my-0   lg:content-normal">
            <NavbarButton
              onClick={toggleNavbar}
              isNavbarVisible={isNavbarVisible}
            ></NavbarButton>
            {!isNavbarVisible ? null : (
              <nav
                className={`navbar ${
                  isNavbarVisible ? "animate-fadeIn " : "hidden"
                }  block w-full pr-5 text-[15px] lg:hidden col-span-2 lg:col-span-1"`}
              >
                <ul>
                  {links.map((link) => (
                    <li key={link.href}>
                      <Link
                        className={`${
                          link.href === pathname ? "border-b" : ""
                        } relative w-full justify-items-center content-center col-span-1`}
                        to={link.href}
                      >
                        {link.label}
                      </Link>
                    </li>
                  ))}
                </ul>
              </nav>
            )}
          </div>
        </div>
      </header>
    );
  }
}

// export const links: LinksFunction = () => {
//   // `links` returns an array of objects whose
//   // properties map to the `<link />` component props
//   return [{ rel: "stylesheet", href: styles }];
// };
